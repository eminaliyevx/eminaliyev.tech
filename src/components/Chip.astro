---
import { cn } from "@/lib";
import type { HTMLTag, Polymorphic } from "astro/types";
import { cva, type VariantProps } from "class-variance-authority";

const chip = cva("rounded-3xl text-center", {
  variants: {
    variant: {
      primary:
        "bg-emerald-500 text-neutral-50 dark:bg-yellow-500 dark:text-neutral-900",
      icon: "flex items-center gap-2 bg-neutral-200 transition dark:bg-neutral-800",
    },
    size: {
      sm: "px-3 py-1 text-sm",
      md: "px-4 py-2 text-base",
    },
    clickable: {
      true: "cursor-pointer hover:scale-95 active:scale-95",
    },
  },
});

type Props<Tag extends HTMLTag> = Polymorphic<{ as: Tag }> &
  VariantProps<typeof chip>;

const {
  variant = "primary",
  size = "md",
  clickable,
  class: className,
  as: Tag = "span",
  ...rest
} = Astro.props;
---

<Tag class={cn(chip({ variant, size, clickable, class: className }))} {...rest}>
  <slot />
</Tag>
