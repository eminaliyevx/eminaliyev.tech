---
import { cn } from "@/lib";
import type { HTMLTag, Polymorphic } from "astro/types";
import { cva, type VariantProps } from "class-variance-authority";

const button = cva(
  "flex items-center justify-center rounded-lg text-center font-semibold transition active:scale-95",
  {
    variants: {
      variant: {
        primary:
          "bg-emerald-500 text-neutral-50 hover:bg-emerald-600 dark:bg-yellow-500 dark:text-neutral-900 dark:hover:bg-yellow-600",
        outline:
          "border border-emerald-500 text-emerald-500 hover:bg-emerald-500 hover:text-neutral-50 dark:border-yellow-500 dark:text-yellow-500 dark:hover:bg-yellow-500 dark:hover:text-neutral-900",
        ghost: "hover:bg-neutral-200 dark:hover:bg-neutral-800",
      },
      size: {
        sm: "h-8 px-6 text-sm",
        md: "h-10 px-6 text-base",
      },
      fullWidth: {
        true: "w-full",
      },
      icon: {
        true: "aspect-square px-0",
      },
    },
  },
);

type Props<Tag extends HTMLTag> = Polymorphic<{ as: Tag }> &
  VariantProps<typeof button>;

const {
  variant = "primary",
  size = "md",
  fullWidth,
  icon,
  class: className,
  as: Tag = "button",
  ...rest
} = Astro.props;
---

<Tag
  class={cn(button({ variant, size, fullWidth, icon, class: className }))}
  {...rest}
>
  <slot />
</Tag>
